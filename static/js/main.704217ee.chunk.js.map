{"version":3,"sources":["pages/Home.js","pages/NoPage.js","components/square.js","components/board.js","pieces/piece.js","pieces/king.js","pieces/queen.js","pieces/rook.js","pieces/bishop.js","pieces/knight.js","pieces/pawn.js","pieces/goose.js","helpers/board-initialiser.js","pages/Game.js","index.js","helpers/index.js"],"names":["Home","id","src","width","alt","href","className","NoPage","Square","props","shade","onClick","style","key","keyVal","Board","i","squareShade","this","squares","board","squareRows","j","isEven","push","renderSquare","React","Component","num","Piece","player","iconUrl","backgroundImage","King","moved","dest","isSameDiagonal","isSameRow","Queen","isPathClean","getSrcToDestPath","isSameColumn","pathStart","pathEnd","incrementBy","path","Math","abs","Rook","Bishop","Knight","Pawn","initialPositions","1","2","isDestEnemyOccupied","indexOf","Goose","position","color","gooseColors","Black","Darkgreen","Orange","Darkblue","Purple","Blue","Teal","Green","Yellow","Red","console","log","state","initialiseChessBoard","Array","fill","Game","initialGeeseColors","geese","sourceSelection","status","turn","enPassantColumn","numberOfFallenSoldiers","geeseColors","connection","ingame","notValidSquare","randomValue","floor","random","sort","pop","initialGoose","WebSocket","setState","onopen","event","send","JSON","stringify","type","onmessage","msg","parse","data","playerNum","deserialize","turnT","alert","charAt","toUpperCase","slice","window","location","backgroundColor","constructor","name","Boolean","isMovePossible","srcToDestPath","isMoveLegal","isCastle","canLeftCastle","canRightCastle","isEnPassant","oldState","newRandomValue","length","newArray","newColor","newGoose","possiblePositions","gooseCaptureSquare","changePosition","newPositionIndex","serialize","reduce","acc","curr","getPlayer","opponent","playersKingPosition","getKingPosition","idx","isLegal","serializedState","str","obj","ex","error","newSquares","newGeese","handleClick","App","element","ReactDOM","render","document","getElementById","diagonalDictionaryTLBR","require","diagonalDictionaryTRBL","rowDictionary","columnDictionary","module","exports"],"mappings":"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","file":"static/js/main.704217ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./Home.css\"\r\n\r\nfunction Home() {\r\n    return (    \r\n        <div id = \"home\">\r\n            <div id = \"content\">\r\n                <img src = \"https://i.ibb.co/tDn2GZf/goose-Chess.png\" width= \"15%\" alt=\"\"/>\r\n                <h1>Welcome to Goose Chess</h1>\r\n                Goose chess is chess with a twist: There are multiple goose pieces on the board.\r\n                Goose pieces are initialized at random positions and will move randomly to any unoccupied adjacent space. There are two geese at the start of the game, and a new goose is added for every three pieces taken, until there are nine geese on the board. <br /> <br />\r\n                Goose pieces act as a third party and will block any form of movement. If a goose piece is completely surrounded they will capture one of the surrounding pieces. <br /><br />\r\n                <b>To win in goose chess, the opposing king must be captured. Check and checkmate do not exist, as the player can utilize goose pieces to block checks</b>\r\n                <div id=\"spacer\"></div>\r\n                <a href=\"/game\">\r\n                <center><button>\r\n                    <span className=\"shadow\"></span>\r\n                    <span className=\"edge\"></span>\r\n                    <span className=\"front text\"> Play Now\r\n                    </span>\r\n                </button></center>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction NoPage() {\r\n    return (\r\n        <h1>there is no page here bruh moment</h1>\r\n    );\r\n}\r\n\r\nexport default NoPage;","import React from 'react';\r\n\r\nimport '../index.css';\r\n\r\nexport default function Square(props) {\r\n\r\n  return (\r\n    <button className={\"square \" + props.shade}\r\n      onClick={props.onClick}\r\n      style={props.style}\r\n      key={props.keyVal}\r\n    >\r\n\r\n    </button>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport '../index.css';\r\nimport Square from './square.js';\r\n\r\nexport default class Board extends React.Component {\r\n\r\n  renderSquare(i, squareShade) {\r\n    return <Square\r\n      key={i}\r\n      keyVal={i}\r\n      style={this.props.squares[i] ? this.props.squares[i].style : null}\r\n      shade={squareShade}\r\n      onClick={() => this.props.onClick(i)}\r\n    />\r\n  }\r\n\r\n  render() {\r\n    const board = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      const squareRows = [];\r\n      for (let j = 0; j < 8; j++) {\r\n        const squareShade = (isEven(i) && isEven(j)) || (!isEven(i) && !isEven(j)) ? \"light-square\" : \"dark-square\";\r\n        squareRows.push(this.renderSquare((i * 8) + j, squareShade));\r\n      }\r\n      board.push(<div className=\"board-row\" key={i}>{squareRows}</div>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {board}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction isEven(num) {\r\n  return num % 2 === 0\r\n}","export default class Piece {\r\n  constructor(player, iconUrl) {\r\n    this.player = player;\r\n    this.style = { backgroundImage: \"url('\" + iconUrl + \"')\" };\r\n  }\r\n\r\n  getPlayer() {\r\n    return this.player\r\n  }\r\n}","import Piece from './piece.js';\r\nimport { isSameDiagonal, isSameRow } from '../helpers'\r\n\r\nexport default class King extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\"));\r\n    this.moved = false\r\n  }\r\n\r\n  isMovePossible(src, dest) {\r\n    return ((src - 9 === dest && isSameDiagonal(src, dest)) ||\r\n    src - 8 === dest ||\r\n    (src - 7 === dest && isSameDiagonal(src, dest)) ||\r\n    (src + 1 === dest && isSameRow(src, dest)) ||\r\n    (src + 9 === dest && isSameDiagonal(src, dest)) ||\r\n    src + 8 === dest ||\r\n    (src + 7 === dest && isSameDiagonal(src, dest)) ||\r\n    (src - 1 === dest && isSameRow(src, dest)) ||\r\n    (!this.moved && (src - 2 === dest || src + 2 === dest)))\r\n  }\r\n\r\n  /**\r\n   * always returns empty array because of one step\r\n   * @return {[]}\r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    return [];\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers'\r\n\r\nexport default class Queen extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest, squares) {\r\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameDiagonal(src, dest) || isSameRow(src, dest) || isSameColumn(src, dest));\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if (src > dest) {\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else {\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if (Math.abs(src - dest) % 8 === 0) {\r\n      incrementBy = 8;\r\n      pathStart += 8;\r\n    }\r\n    else if (Math.abs(src - dest) % 9 === 0) {\r\n      incrementBy = 9;\r\n      pathStart += 9;\r\n    }\r\n    else if (Math.abs(src - dest) % 7 === 0) {\r\n      incrementBy = 7;\r\n      pathStart += 7;\r\n    }\r\n    else {\r\n      incrementBy = 1;\r\n      pathStart += 1;\r\n    }\r\n\r\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}","import Piece from './piece.js';\r\nimport { isSameRow, isSameColumn, isPathClean } from '../helpers'\r\n\r\nexport default class Rook extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\r\n    this.moved = false\r\n  }\r\n\r\n  isMovePossible(src, dest, squares) {\r\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameColumn(src, dest) || isSameRow(src, dest))\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if (src > dest) {\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else {\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if (Math.abs(src - dest) % 8 === 0) {\r\n      incrementBy = 8;\r\n      pathStart += 8;\r\n    }\r\n    else {\r\n      incrementBy = 1;\r\n      pathStart += 1;\r\n    }\r\n\r\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameDiagonal, isPathClean } from '../helpers'\r\n\r\nexport default class Bishop extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest, squares) {\r\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && isSameDiagonal(src, dest)\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if (src > dest) {\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else {\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if (Math.abs(src - dest) % 9 === 0) {\r\n      incrementBy = 9;\r\n      pathStart += 9;\r\n    }\r\n    else {\r\n      incrementBy = 7;\r\n      pathStart += 7;\r\n    }\r\n\r\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameRow } from '../helpers'\r\n\r\nexport default class Knight extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest) {\r\n    return ((src - 17 === dest && !isSameRow(src, dest)) ||\r\n      (src - 10 === dest && !isSameRow(src, dest)) ||\r\n      (src + 6 === dest && !isSameRow(src, dest)) ||\r\n      (src + 15 === dest && !isSameRow(src, dest)) ||\r\n      (src - 15 === dest && !isSameRow(src, dest)) ||\r\n      (src - 6 === dest && !isSameRow(src, dest)) ||\r\n      (src + 10 === dest && !isSameRow(src, dest)) ||\r\n      (src + 17 === dest && !isSameRow(src, dest)))\r\n  }\r\n\r\n  /**\r\n   * always returns empty array because of jumping\r\n   * @return {[]}\r\n   */\r\n  getSrcToDestPath() {\r\n    return [];\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameDiagonal } from '../helpers'\r\n\r\nexport default class Pawn extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\r\n    this.initialPositions = {\r\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\r\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\r\n    }\r\n  }\r\n\r\n  isMovePossible(src, dest, isDestEnemyOccupied) {\r\n\r\n    if (this.player === 1) {\r\n      if ((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && !isDestEnemyOccupied && this.initialPositions[1].indexOf(src) !== -1)) {\r\n        return true;\r\n      }\r\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src - 9 || dest === src - 7)) {\r\n        return true;\r\n      }\r\n    }\r\n    else if (this.player === 2) {\r\n      if ((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && !isDestEnemyOccupied && this.initialPositions[2].indexOf(src) !== -1)) {\r\n        return true;\r\n      }\r\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src + 9 || dest === src + 7)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * returns array of one if pawn moves two steps, else returns empty array  \r\n   * @param  {[type]} src  [description]\r\n   * @param  {[type]} dest [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    if (dest === src - 16) {\r\n      return [src - 8];\r\n    }\r\n    else if (dest === src + 16) {\r\n      return [src + 8];\r\n    }\r\n    return [];\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameDiagonal, isSameRow } from '../helpers'\r\n\r\nexport default class Goose extends Piece {\r\n  constructor(player, position, color) {\r\n    \r\n    const gooseColors = {\r\n      Black: \"pfx.svg\",\r\n      Darkgreen: \"ph1.svg\",\r\n      Orange: \"phr.svg\",\r\n      Darkblue: \"phW.svg\",\r\n      Purple: \"pgY.svg\",\r\n      Blue: \"phX.svg\",\r\n      Teal: \"phL.svg\",\r\n      Green: \"phM.svg\",\r\n      Yellow: \"pgt.svg\",\r\n      Red: \"pgu.svg\"\r\n    }\r\n    console.log(gooseColors[color]);\r\n    super(player, \"https://svgshare.com/i/\" + gooseColors[color]);\r\n    this.position = position;\r\n    this.color = color;\r\n  }\r\n\r\n  isMovePossible(src, dest) {\r\n    return ((src - 9 === dest && isSameDiagonal(src, dest)) ||\r\n      src - 8 === dest ||\r\n      (src - 7 === dest && isSameDiagonal(src, dest)) ||\r\n      (src + 1 === dest && isSameRow(src, dest)) ||\r\n      (src + 9 === dest && isSameDiagonal(src, dest)) ||\r\n      src + 8 === dest ||\r\n      (src + 7 === dest && isSameDiagonal(src, dest)) ||\r\n      (src - 1 === dest && isSameRow(src, dest)))\r\n  }\r\n\r\n  /**\r\n   * always returns empty array because of one step\r\n   * @return {[]}\r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    return [];\r\n  }\r\n\r\n  getPosition() {\r\n    return this.state.position;\r\n  }\r\n\r\n  changePosition(position) {\r\n    this.position = position;\r\n  }\r\n}\r\n","import Bishop from '../pieces/bishop.js';\r\nimport King from '../pieces/king.js';\r\nimport Knight from '../pieces/knight.js';\r\nimport Pawn from '../pieces/pawn.js';\r\nimport Queen from '../pieces/queen.js';\r\nimport Rook from '../pieces/rook.js';\r\n\r\nexport default function initialiseChessBoard() {\r\n  const squares = Array(64).fill(null);\r\n\r\n  for (let i = 8; i < 16; i++) {\r\n    squares[i] = new Pawn(2);\r\n    squares[i + 40] = new Pawn(1);\r\n  }\r\n\r\n  squares[0] = new Rook(2);\r\n  squares[7] = new Rook(2);\r\n  squares[56] = new Rook(1);\r\n  squares[63] = new Rook(1);\r\n\r\n  squares[1] = new Knight(2);\r\n  squares[6] = new Knight(2);\r\n  squares[57] = new Knight(1);\r\n  squares[62] = new Knight(1);\r\n\r\n  squares[2] = new Bishop(2);\r\n  squares[5] = new Bishop(2);\r\n  squares[58] = new Bishop(1);\r\n  squares[61] = new Bishop(1);\r\n\r\n  squares[3] = new Queen(2);\r\n  squares[4] = new King(2);\r\n\r\n  squares[59] = new Queen(1);\r\n  squares[60] = new King(1);\r\n\r\n\r\n\r\n  return squares;\r\n}","import React from 'react';\r\nimport './Game.css';\r\nimport Board from '../components/board.js';\r\nimport King from '../pieces/king';\r\nimport Queen from '../pieces/queen';\r\nimport Rook from '../pieces/rook';\r\nimport Bishop from '../pieces/bishop';\r\nimport Knight from '../pieces/knight';\r\nimport Pawn from '../pieces/pawn';\r\nimport Goose from '../pieces/goose';\r\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\r\n\r\n\r\nexport default class Game extends React.Component {\r\n  constructor() {\r\n    super();\r\n    //console.log(this.props);\r\n    \r\n    let initialGeeseColors = [\"Purple\",\"Black\",\"Orange\",\"Red\",\"Yellow\",\"Green\",\"Blue\",\"Darkblue\",\"Darkgreen\"];\r\n    //initialGeeseColors.sort(() => (Math.random() > .5) ? 1 : -1);\r\n\r\n    this.state = {\r\n      squares: initialiseChessBoard(),\r\n      geese: [],\r\n      player: 1,\r\n      sourceSelection: -1,\r\n      status: '',\r\n      turn: 'white',\r\n      enPassantColumn: -2,\r\n      numberOfFallenSoldiers: 1,\r\n      geeseColors: initialGeeseColors,\r\n      connection: null,\r\n      ingame: false,\r\n    }\r\n    \r\n    // setting the intial board to include a goose\r\n    for (let i = 0; i < 2; i++) {\r\n      let notValidSquare = true;\r\n      let randomValue = 0;\r\n      while (notValidSquare) {\r\n        randomValue = Math.floor(Math.random() * (39 - 24 + 1)) + 24;\r\n        if (this.state.squares[randomValue] === null) {\r\n          notValidSquare = false;\r\n        }\r\n      }\r\n\r\n\r\n      initialGeeseColors.sort(() => (Math.random() > .5) ? 1 : -1)\r\n      let color = initialGeeseColors.pop();\r\n\r\n      let initialGoose = new Goose(3, randomValue, color);\r\n      this.state.squares[randomValue] = initialGoose;\r\n      console.log(\"Initial goose starting value: \" + randomValue);\r\n      this.state.geese.push(initialGoose);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const connection = new WebSocket(\"ws://18.188.216.102:8080\") \r\n    console.log(connection);\r\n\r\n    this.setState({\r\n      connection: connection,\r\n    });\r\n\r\n    connection.onopen = (event) => {\r\n      console.log(\"connected to server\")\r\n      connection.send(JSON.stringify({\r\n        type: \"queue\"\r\n      }))\r\n    };\r\n\r\n    connection.onmessage = (event) => {\r\n      const msg = JSON.parse(event.data);\r\n      console.log(\"Recieved a message from the server \" + msg.type);\r\n      switch(msg.type) {\r\n        case \"queue\":\r\n          this.setState({status: \"Waiting for an opponent\"})\r\n          break;\r\n        case \"gameFound\":\r\n          // let the player know that they are now in a game\r\n          console.log(msg.playerNum)\r\n          this.setState({\r\n            status: \"\",\r\n            ingame: true,\r\n            player: msg.playerNum\r\n          })\r\n          break;\r\n        case \"boardUpdate\":\r\n          this.deserialize(msg.data)\r\n          // resetting the turn so that the player can move again (other players move has been recieved).\r\n          let turnT = this.state.turn === 'white' ? 'black' : 'white';\r\n\r\n          this.setState({\r\n            turn: turnT\r\n          })\r\n\r\n          break;\r\n        case \"endGame\":\r\n          alert(this.state.turn.charAt(0).toUpperCase() + this.state.turn.slice(1) + \" wins!\")\r\n          window.location.href = \"/\";\r\n          break;\r\n        case \"close\":\r\n          // opposing player left the game: kick player back to lobby\r\n          alert(\"The opponent left the match\");\r\n          window.location.href = \"/\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  async handleClick(i) {\r\n    if (!this.state.ingame) {\r\n      //waiting to find a game\r\n      return;\r\n    }\r\n\r\n    if ((this.state.turn === \"white\" && this.state.player === 2) || (this.state.turn === \"black\" && this.state.player === 1)) {\r\n      this.setState({status: \"It's not your turn.\"})\r\n      return;\r\n    } \r\n\r\n    const squares = [...this.state.squares];\r\n\r\n    if (this.state.sourceSelection === -1) {\r\n      if (!squares[i] || squares[i].player !== this.state.player) {\r\n        this.setState({ status: \"Wrong selection. Choose the \" + this.state.turn + \" pieces\" });\r\n        if (squares[i]) {\r\n          squares[i].style = { ...squares[i].style, backgroundColor: \"\" };\r\n        }\r\n      }\r\n      else {\r\n        squares[i].style = { ...squares[i].style, backgroundColor: \"RGB(111,143,114)\" }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\r\n        this.setState({\r\n          status: \"Choose destination for the selected piece\",\r\n          sourceSelection: i\r\n        })\r\n      }\r\n      return\r\n    }\r\n\r\n    \r\n\r\n    squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\r\n\r\n    if (squares[i] && squares[i].player === this.state.player) {\r\n      squares[i].style = { ...squares[i].style, backgroundColor: \"RGB(111,143,114)\" };\r\n      this.setState({\r\n        sourceSelection: i,\r\n      });\r\n      return\r\n\r\n\r\n    }\r\n\r\n    if (squares[this.state.sourceSelection].constructor.name === \"King\" && !squares[this.state.sourceSelection].moved && (this.state.sourceSelection - i === -3 || this.state.sourceSelection - i === 4)) {\r\n      if (i < this.state.sourceSelection) i += 2\r\n      else i -= 1\r\n    }\r\n\r\n    if (squares[i] && squares[i].player === this.state.player) {\r\n      this.setState({\r\n        status: \"Wrong selection. Choose valid source and destination again.\",\r\n        sourceSelection: -1,\r\n      });\r\n    }\r\n    else {\r\n      const isDestEnemyOccupied = Boolean(squares[i]);\r\n      const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied);\r\n      const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\r\n      const isMoveLegal = this.isMoveLegal(srcToDestPath);\r\n      const isCastle = squares[this.state.sourceSelection].constructor.name === \"King\" && Math.abs(this.state.sourceSelection - i) === 2;\r\n      const canLeftCastle = (this.state.player === 1 && squares[56] && squares[56].constructor.name === \"Rook\" && !squares[56].moved && this.isMoveLegal(squares[56].getSrcToDestPath(56, 59)) && !squares[59]) ||\r\n        (this.state.player === 2 && squares[0] && squares[0].constructor.name === \"Rook\" && !squares[0].moved\r\n        && this.isMoveLegal(squares[0].getSrcToDestPath(0, 3)) && !squares[3]);\r\n      const canRightCastle = (this.state.player === 1 && squares[63] && squares[63].constructor.name === \"Rook\" && !squares[63].moved && this.isMoveLegal(squares[63].getSrcToDestPath(63, 61)) && !squares[61]) ||\r\n        (this.state.player === 2 && squares[7] && squares[7].constructor.name === \"Rook\" && !squares[7].moved && this.isMoveLegal(squares[7].getSrcToDestPath(7, 5)) && !squares[5]);\r\n      const isEnPassant = squares[this.state.sourceSelection].constructor.name === \"Pawn\" && !squares[i] &&\r\n        (((this.state.sourceSelection % 8) - 1 === this.state.enPassantColumn && (this.state.sourceSelection - i === 9 || this.state.sourceSelection - i === -7)) ||\r\n        ((this.state.sourceSelection % 8) + 1 === this.state.enPassantColumn)) &&\r\n        ((this.state.player === 1 && this.state.sourceSelection >= 24 && this.state.sourceSelection <= 31) ||\r\n        (this.state.player === 2 && this.state.sourceSelection >= 32 && this.state.sourceSelection <= 39))\r\n      \r\n      if ((isMovePossible || isEnPassant) && isMoveLegal && (squares[i] === null || squares[i].constructor.name !== \"Goose\") && (!isCastle || (this.state.sourceSelection - i === 2 && canLeftCastle) || (this.state.sourceSelection - i === -2 && canRightCastle))) {\r\n        if (squares[i] !== null) {\r\n          \r\n          await this.setState(oldState => ({numberOfFallenSoldiers: oldState.numberOfFallenSoldiers + 1}))\r\n          //console.log(\"number of fallen soldiers : \" + this.state.numberOfFallenSoldiers);\r\n          if ((this.state.numberOfFallenSoldiers % 3) === 0 && this.state.numberOfFallenSoldiers !== 0 && this.state.numberOfFallenSoldiers < 24) {\r\n            //console.log(\"the if statement\");\r\n            let newRandomValue = 0;\r\n            if ((this.state.geese.length + 1) >= 4) {\r\n              let notValidSquare = true;\r\n              while (notValidSquare) {\r\n                newRandomValue = Math.floor(Math.random() * (47 - 16 + 1)) + 16;\r\n                if (this.state.squares[newRandomValue] === null) {\r\n                  notValidSquare = false;\r\n                }\r\n              }\r\n            \r\n            } else {\r\n              let notValidSquare = true;\r\n              while (notValidSquare) {\r\n                newRandomValue = Math.floor(Math.random() * (39 - 24 + 1)) + 24;\r\n                if (this.state.squares[newRandomValue] === null) {\r\n                  notValidSquare = false;\r\n                }\r\n              }\r\n            }\r\n\r\n            //let newColor = this.state.initialGeeseColors.pop();\r\n            //console.log(this.state.geeseColors.length - 1);\r\n            //let newColor = this.state.geeseColors[this.state.geeseColors.length - 1];\r\n            let newArray = this.state.geeseColors;\r\n            let newColor = newArray.pop();\r\n            await this.setState(oldState => ({geeseColors: newArray}));\r\n          \r\n\r\n            let newGoose = new Goose(3, newRandomValue, newColor);\r\n            squares[newRandomValue] = newGoose;\r\n            //console.log(this.state.squares);\r\n            this.state.geese.push(newGoose);\r\n            //console.log(\"goose array : \" + this.state.geese[2].position);\r\n          }\r\n          \r\n\r\n\r\n          if (squares[i].player === 1) {\r\n            if (squares[i].constructor.name === \"King\") {\r\n              console.log(\"endgame black wins\")\r\n              this.state.connection.send(JSON.stringify({type: \"endGame\"}))\r\n              alert(\"Black wins!\")\r\n\r\n              // send the user back to the lobby\r\n              window.location.href = \"/\";\r\n            }          \r\n          }\r\n          else {\r\n            if (squares[i].constructor.name === \"King\") {\r\n              console.log(\"endgame white wins\")\r\n              this.state.connection.send(JSON.stringify({type: \"endGame\"}))\r\n              alert(\"White wins!\")\r\n\r\n              // send the user back to the lobby\r\n              window.location.href = \"/\";\r\n            }\r\n          }\r\n        }\r\n        if (squares[this.state.sourceSelection].constructor.name === \"Pawn\" && Math.abs(this.state.sourceSelection - i) > 8) {\r\n          this.setState(oldState => ({enPassantColumn: i % 8}))\r\n        } else {\r\n          this.setState(oldState => ({enPassantColumn: -2}))\r\n        }\r\n        if (squares[this.state.sourceSelection].constructor.name === \"King\" || squares[this.state.sourceSelection].constructor.name === \"Rook\") {\r\n          //console.log(squares[this.state.sourceSelection].moved)\r\n          squares[this.state.sourceSelection].moved = true\r\n        }\r\n        if (isCastle) {\r\n          if (this.state.sourceSelection - i > 0) {\r\n            if (this.state.player === 1) {\r\n              squares[59] = squares[56]\r\n              squares[56] = null\r\n              squares[59].moved = true\r\n            }\r\n            else {\r\n              squares[3] = squares[0]\r\n              squares[0] = null\r\n              squares[3].moved = true\r\n            }\r\n          }\r\n          else {\r\n            if (this.state.player === 1) {\r\n              squares[61] = squares[63]\r\n              squares[63] = null\r\n              squares[61].moved = true\r\n            }\r\n            else {\r\n              squares[5] = squares[7]\r\n              squares[7] = null\r\n              squares[5].moved = true\r\n            }\r\n          }\r\n        }\r\n        \r\n        if (isEnPassant) {\r\n          if (this.state.player === 1) {\r\n            squares[i + 8] = null\r\n          }\r\n          else {\r\n            squares[i - 8] = null\r\n          }\r\n        }\r\n        \r\n        squares[i] = squares[this.state.sourceSelection];\r\n        squares[this.state.sourceSelection] = null;\r\n        \r\n\r\n        //const isCheckMe = this.isCheckForPlayer(squares, this.state.player)\r\n        const isCheckMe = false;\r\n\r\n        if (isCheckMe) {\r\n          this.setState(oldState => ({\r\n            status: \"Wrong selection. Choose valid source and destination again. Now you have a check!\",\r\n            sourceSelection: -1,\r\n          }))\r\n        } else {\r\n          let turn = this.state.turn === 'white' ? 'black' : 'white';\r\n\r\n          //Pawn Promotion\r\n          if(squares[i].constructor.name === \"Pawn\" ) {\r\n            if(i === 0 || i === 1 ||\r\n               i === 2 || i === 3 ||\r\n               i === 4 || i === 5 ||\r\n               i === 6 || i === 7 ) {\r\n              squares[i] = new Queen(1);\r\n               }\r\n              if(i === 56 || i === 57 ||\r\n                i === 58 || i === 59 ||\r\n                i === 60 || i === 61 ||\r\n                i === 62 || i === 63 ) {\r\n              squares[i] = new Queen(2);\r\n            } \r\n          }\r\n\r\n          \r\n          await this.setState(oldState => ({\r\n            sourceSelection: -1,\r\n            squares: squares,\r\n            status: '',\r\n            turn\r\n          }));\r\n          \r\n        }\r\n\r\n        //goosemove\r\n        for(let i = 0; i < this.state.geese.length; i++) {\r\n          let position = this.state.geese[i].position;\r\n          let possiblePositions = [];\r\n\r\n\r\n          if (position === 0 || position === 8 || position === 16 || position === 24 || position === 32 || \r\n            position === 40 || position === 48 || position === 56) {\r\n              if (squares[position - 8] === null) {\r\n                possiblePositions.push(position - 8);\r\n              }\r\n              if (squares[position - 7] === null) {\r\n                possiblePositions.push(position - 7);\r\n              }\r\n              if (squares[position + 1] === null) {\r\n                possiblePositions.push(position + 1);\r\n              }\r\n              if (squares[position + 9] === null) {\r\n                possiblePositions.push(position + 9);\r\n              }\r\n              if (squares[position + 8] === null) {\r\n                possiblePositions.push(position + 8);\r\n              }\r\n            } else if (position === 7 || position === 15 || position === 23 || position === 31 || position === 39 || \r\n              position === 47 || position === 55 || position === 63) {\r\n                if (squares[position - 9] === null) {\r\n                  possiblePositions.push(position - 9);\r\n                }\r\n                if (squares[position - 8] === null) {\r\n                  possiblePositions.push(position - 8);\r\n                }\r\n                if (squares[position + 8] === null) {\r\n                  possiblePositions.push(position + 8);\r\n                }\r\n                if (squares[position + 7] === null) {\r\n                  possiblePositions.push(position + 7);\r\n                }\r\n                if (squares[position - 1] === null) {\r\n                  possiblePositions.push(position - 1);\r\n                }\r\n            } else {\r\n          if (squares[position - 9] === null) {\r\n            possiblePositions.push(position - 9);\r\n          }\r\n          if (squares[position - 8] === null) {\r\n            possiblePositions.push(position - 8);\r\n          }\r\n          if (squares[position - 7] === null) {\r\n            possiblePositions.push(position - 7);\r\n          }\r\n          if (squares[position + 1] === null) {\r\n            possiblePositions.push(position + 1);\r\n          }\r\n          if (squares[position + 9] === null) {\r\n            possiblePositions.push(position + 9);\r\n          }\r\n          if (squares[position + 8] === null) {\r\n            possiblePositions.push(position + 8);\r\n          }\r\n          if (squares[position + 7] === null) {\r\n            possiblePositions.push(position + 7);\r\n          }\r\n          if (squares[position - 1] === null) {\r\n            possiblePositions.push(position - 1);\r\n          }\r\n        }\r\n        if(possiblePositions.length === 0) {\r\n          if(position === 0) {\r\n            possiblePositions.push(1);\r\n            possiblePositions.push(8);\r\n            possiblePositions.push(9);\r\n          } else if(position === 7) {\r\n            possiblePositions.push(6);\r\n            possiblePositions.push(14);\r\n            possiblePositions.push(15);\r\n          } else if(position === 56) {\r\n            possiblePositions.push(48);\r\n            possiblePositions.push(49);\r\n            possiblePositions.push(57);\r\n          } else if(position === 63) {\r\n            possiblePositions.push(62);\r\n            possiblePositions.push(54);\r\n            possiblePositions.push(55);\r\n          } else if(position === 8 || position === 16 || position === 24 || position === 32 || \r\n          position === 40 || position === 48){\r\n            possiblePositions.push(position - 8);\r\n            possiblePositions.push(position - 7);\r\n            possiblePositions.push(position + 8);\r\n            possiblePositions.push(position + 9);\r\n            possiblePositions.push(position + 1);\r\n          } else if(position === 15 || position === 23 || position === 31 || position === 39 || \r\n          position === 47 || position === 55) {\r\n            possiblePositions.push(position - 9);\r\n            possiblePositions.push(position - 8);\r\n            possiblePositions.push(position - 1);\r\n            possiblePositions.push(position + 7);\r\n            possiblePositions.push(position + 8);\r\n          } else if(position === 1 || position === 2 || position === 3 || position === 4 || \r\n          position === 5 || position === 6) {\r\n            possiblePositions.push(position - 1);\r\n            possiblePositions.push(position + 1);\r\n            possiblePositions.push(position + 7);\r\n            possiblePositions.push(position + 8);\r\n            possiblePositions.push(position + 9);\r\n          } else if(position === 57 || position === 58 || position === 59 || position === 60 || \r\n          position === 61 || position === 62) {\r\n            possiblePositions.push(position - 7);\r\n            possiblePositions.push(position - 8);\r\n            possiblePositions.push(position - 9);\r\n            possiblePositions.push(position - 1);\r\n            possiblePositions.push(position + 1);\r\n          } else {\r\n            possiblePositions.push(position - 9);\r\n            possiblePositions.push(position - 8);\r\n            possiblePositions.push(position - 7);\r\n            possiblePositions.push(position + 9);\r\n            possiblePositions.push(position + 8);\r\n            possiblePositions.push(position + 7);\r\n            possiblePositions.push(position - 1);\r\n            possiblePositions.push(position + 1);\r\n          }\r\n          let gooseCaptureSquare = possiblePositions[Math.floor(Math.random() * (possiblePositions.length))];\r\n\r\n          squares[gooseCaptureSquare] = squares[position];\r\n          squares[position] = null;\r\n          await this.state.geese[i].changePosition(gooseCaptureSquare);\r\n          gooseCaptureSquare = null;\r\n        } else {\r\n            //console.log(\"Original Position : \" + position);\r\n            //console.log(\"Possible positions : \" + possiblePositions);\r\n            let newPositionIndex = Math.floor(Math.random() * (possiblePositions.length));\r\n            \r\n            //console.log(\"New Position : \" + possiblePositions[newPositionIndex]);\r\n\r\n            squares[possiblePositions[newPositionIndex]] = squares[position];\r\n            squares[position] = null;\r\n            //this.Goose.position = possiblePositions[newPositionIndex];\r\n            await this.state.geese[i].changePosition(possiblePositions[newPositionIndex]);\r\n          }\r\n        }\r\n\r\n        await this.setState({squares: squares})\r\n\r\n        // Send new board to the server for the other player to recieve.\r\n        console.log(\"Sending data\");\r\n        console.log(this.state.squares);\r\n        console.log(this.serialize());\r\n        this.state.connection.send(JSON.stringify({type: \"boardUpdate\", data: this.serialize()}));\r\n\r\n      } else {\r\n        this.setState({\r\n          status: \"Wrong selection. Choose valid source and destination again.\",\r\n          sourceSelection: -1\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getKingPosition(squares, player) {\r\n    return squares.reduce((acc, curr, i) =>\r\n      acc || //King may be only one, if we had found it, returned his position\r\n      ((curr //current squre mustn't be a null\r\n        && (curr.getPlayer() === player)) //we are looking for aspecial king \r\n        && (curr instanceof King)\r\n        && i), // returned position if all conditions are completed\r\n      null)\r\n  }\r\n\r\n  isCheckForPlayer(squares, player) {\r\n    const opponent = player === 1 ? 2 : 1\r\n    const playersKingPosition = this.getKingPosition(squares, player)\r\n    const canPieceKillPlayersKing = (piece, i) => piece.isMovePossible(playersKingPosition, i, squares)\r\n    return squares.reduce((acc, curr, idx) =>\r\n      acc ||\r\n      (curr &&\r\n        (curr.getPlayer() === opponent) &&\r\n        canPieceKillPlayersKing(curr, idx)\r\n        && true),\r\n      false)\r\n  }\r\n\r\n    /**\r\n   * Check all path indices are null. For one steps move of pawn/others or jumping moves of knight array is empty, so  move is legal.\r\n   * @param  {[type]}  srcToDestPath [array of board indices comprising path between src and dest ]\r\n   * @return {Boolean}               \r\n   */\r\n\r\n  isMoveLegal(srcToDestPath){\r\n    let isLegal = true;\r\n    for(let i = 0; i < srcToDestPath.length; i++){\r\n      if(this.state.squares[srcToDestPath[i]] !== null){\r\n        isLegal = false;\r\n      }\r\n    }\r\n    return isLegal;\r\n  }\r\n\r\n  serialize() {\r\n    let serializedState = {}\r\n    serializedState.squares = []\r\n    for (let i = 0; i < this.state.squares.length; i++) {\r\n      if (this.state.squares[i]) {\r\n        serializedState.squares.push({})\r\n        serializedState.squares[i].type = this.state.squares[i].constructor.name\r\n        serializedState.squares[i].player = this.state.squares[i].player\r\n        if (serializedState.squares[i].type === \"King\" || serializedState.squares[i].type === \"Rook\") {\r\n          serializedState.squares[i].moved = this.state.squares[i].moved\r\n        }\r\n        if (serializedState.squares[i].type === \"Goose\") {\r\n          serializedState.squares[i].color = this.state.squares[i].color\r\n          serializedState.squares[i].position = this.state.squares[i].position\r\n        }\r\n      } else {\r\n        serializedState.squares.push(null)\r\n      }\r\n    }\r\n    serializedState.enPassantColumn = this.state.enPassantColumn;\r\n    serializedState.numberOfFallenSoldiers = this.state.numberOfFallenSoldiers;\r\n    serializedState.geeseColors = this.state.geeseColors\r\n    return JSON.stringify(serializedState)\r\n  }\r\n\r\n  deserialize(str) {\r\n    let obj;\r\n    try {\r\n      obj = JSON.parse(str)\r\n    } catch (ex) {\r\n      console.error(ex)\r\n      return;\r\n    }\r\n    let newSquares = []\r\n    let newGeese = []\r\n    for (let i = 0; i < obj.squares.length; i++) {\r\n      if (!obj.squares[i]) {\r\n        newSquares.push(null)\r\n      } else {\r\n        switch (obj.squares[i].type) {\r\n          case \"King\":\r\n            newSquares.push(new King(obj.squares[i].player))\r\n            newSquares[i].moved = obj.squares[i].moved\r\n            break;\r\n          case \"Queen\":\r\n            newSquares.push(new Queen(obj.squares[i].player))\r\n            break;\r\n          case \"Bishop\":\r\n            newSquares.push(new Bishop(obj.squares[i].player))\r\n            break;\r\n          case \"Knight\":\r\n            newSquares.push(new Knight(obj.squares[i].player))\r\n            break;\r\n          case \"Rook\":\r\n            newSquares.push(new Rook(obj.squares[i].player))\r\n            newSquares[i].moved = obj.squares[i].moved\r\n            break;\r\n          case \"Pawn\":\r\n            newSquares.push(new Pawn(obj.squares[i].player))\r\n            break;\r\n          case \"Goose\":\r\n            newSquares.push(new Goose(3, obj.squares[i].position, obj.squares[i].color))\r\n            newGeese.push(newSquares[i])\r\n            break;\r\n          default:\r\n            console.log(\"Undefined type given\")\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    this.setState({\r\n      squares: newSquares,\r\n      geese: newGeese,\r\n      enPassantColumn: obj.enPassantColumn,\r\n      numberOfFallenSoldiers: obj.numberOfFallenSoldiers,\r\n      geeseColors: obj.geeseColors,\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n            \r\n              squares={this.state.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <h3>Turn</h3>\r\n            <div className=\"player-turn-box-container\">\r\n              <div id=\"player-turn-box\" style={{ backgroundColor: this.state.turn }}>\r\n            </div>\r\n            </div>\r\n            <div className=\"game-status\">{this.state.status}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n//import Game from './components/Game.js'\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport NoPage from \"./pages/NoPage\";\r\nimport Game from \"./pages/Game\";\r\n\r\n\r\nexport default function App() {\r\n  /*\r\n  const [connection, setConnection] = useState(null);\r\n\r\n  useEffect(() => { \r\n    setConnection(new WebSocket(\"ws://18.188.216.102:8080\"))\r\n\r\n    console.log(connection);\r\n  }, [])\r\n  */\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n            <Route path =\"/\" element={<Home/>} />\r\n            <Route path = \"game\" element={<Game/>} />\r\n            <Route path = \"*\" element={<Home/>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n","const diagonalDictionaryTLBR = require('../dictionaries/diagonalTopLeftBottomRight.json');\r\nconst diagonalDictionaryTRBL = require('../dictionaries/diagonalTopRightBottomLeft.json');\r\nconst rowDictionary = require('../dictionaries/row.json');\r\nconst columnDictionary = require('../dictionaries/column.json');\r\n\r\nconst isSameRow = (src, dest) => {\r\n  return !!(rowDictionary[src] && rowDictionary[src][dest]);\r\n}\r\n\r\nconst isSameColumn = (src, dest) => {\r\n  return !!(columnDictionary[src] && columnDictionary[src][dest]);\r\n}\r\n\r\nconst isSameDiagonal = (src, dest) => {\r\n  return !!((diagonalDictionaryTLBR[src] && diagonalDictionaryTLBR[src][dest]) ||\r\n    (diagonalDictionaryTRBL[src] && diagonalDictionaryTRBL[src][dest]))\r\n}\r\n\r\nconst isPathClean = (srcToDestPath, squares) => srcToDestPath.reduce((acc, curr) => !squares[curr] && acc, true)\r\n\r\n\r\nmodule.exports = {\r\n  isSameRow,\r\n  isSameColumn,\r\n  isSameDiagonal,\r\n  isPathClean\r\n}"],"sourceRoot":""}